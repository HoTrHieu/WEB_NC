{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/profile/TeacherProfileEditForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, notification } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { UserFormRules } from \"../user/UserFormRules\";\nimport { UserService } from \"../user/UserService\";\nimport { ProfileActionButtonGroup } from \"./ProfileActionButtonGroup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TeacherProfileEditForm(props) {\n  _s();\n\n  const [form] = Form.useForm();\n  const [edit, setEdit] = useState(false);\n  const {\n    authedUser,\n    onSaveSuccess\n  } = props;\n  const saveTeacherProfile = useCallback(async () => {\n    let payload;\n\n    try {\n      payload = await form.validateFields();\n    } catch {\n      return;\n    }\n\n    try {\n      await UserService.updateTeacherProfile(payload);\n      setEdit(false);\n      onSaveSuccess(payload);\n      notification.success({\n        message: \"Success\",\n        description: \"Update your teacher profile success\"\n      });\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n  }, [form, onSaveSuccess]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    initialValues: {\n      bio: authedUser.bio,\n      introduction: authedUser.introduction\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: \"Bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"bio\",\n      rules: UserFormRules.bio,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        disabled: !edit,\n        placeholder: \"Bio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: \"Introduction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"introduction\",\n      rules: UserFormRules.introduction,\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        rows: 5,\n        disabled: !edit,\n        placeholder: \"Introduction...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(ProfileActionButtonGroup, {\n        edit: edit,\n        editBtnTitle: \"Edit your teacher profile\",\n        onSave: () => saveTeacherProfile(),\n        onCancel: () => setEdit(false),\n        onEdit: () => setEdit(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TeacherProfileEditForm, \"U8M8mxmeUW86nhZnpyW5kzEaxM8=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = TeacherProfileEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeacherProfileEditForm\");","map":{"version":3,"sources":["/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/profile/TeacherProfileEditForm.tsx"],"names":["Form","Input","notification","React","useCallback","useState","NotificationUtils","UserFormRules","UserService","ProfileActionButtonGroup","TeacherProfileEditForm","props","form","useForm","edit","setEdit","authedUser","onSaveSuccess","saveTeacherProfile","payload","validateFields","updateTeacherProfile","success","message","description","err","console","error","bio","introduction"],"mappings":"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","sourcesContent":["import { Form, Input, notification } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { IUser } from \"../../shared/entities/IUser\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { UserFormRules } from \"../user/UserFormRules\";\nimport { UserService } from \"../user/UserService\";\nimport { ProfileActionButtonGroup } from \"./ProfileActionButtonGroup\";\n\ninterface ITeacherProfileEditFormProps {\n  authedUser: IUser;\n  onSaveSuccess: (payload: any) => any;\n}\n\nexport function TeacherProfileEditForm(props: ITeacherProfileEditFormProps) {\n  const [form] = Form.useForm();\n  const [edit, setEdit] = useState(false);\n\n  const { authedUser, onSaveSuccess } = props;\n  const saveTeacherProfile = useCallback(async () => {\n    let payload: any;\n    try {\n      payload = await form.validateFields();\n    } catch {\n      return;\n    }\n\n    try {\n      await UserService.updateTeacherProfile(payload);\n      setEdit(false);\n      onSaveSuccess(payload);\n      notification.success({\n        message: \"Success\",\n        description: \"Update your teacher profile success\",\n      });\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n  }, [form, onSaveSuccess]);\n\n  return (\n    <Form\n      form={form}\n      initialValues={{\n        bio: authedUser.bio,\n        introduction: authedUser.introduction,\n      }}\n    >\n      <label className=\"block mb-2\">Bio</label>\n      <Form.Item name=\"bio\" rules={UserFormRules.bio}>\n        <Input disabled={!edit} placeholder=\"Bio...\" />\n      </Form.Item>\n      <label className=\"block mb-2\">Introduction</label>\n      <Form.Item name=\"introduction\" rules={UserFormRules.introduction}>\n        <Input.TextArea rows={5} disabled={!edit} placeholder=\"Introduction...\" />\n      </Form.Item>\n      <Form.Item>\n        <ProfileActionButtonGroup\n          edit={edit}\n          editBtnTitle=\"Edit your teacher profile\"\n          onSave={() => saveTeacherProfile()}\n          onCancel={() => setEdit(false)}\n          onEdit={() => setEdit(true)}\n        />\n      </Form.Item>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}