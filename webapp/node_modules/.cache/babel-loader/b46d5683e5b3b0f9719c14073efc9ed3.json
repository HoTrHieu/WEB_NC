{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/shared/components/FdmAuthedRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { AuthService } from \"../../modules/auth/AuthService\";\nimport { useAuthedUser } from \"../hooks/useAuthedUser\";\nimport { FdmLoading } from \"./FdmLoading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FdmAuthedRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    authedUser,\n    loading\n  } = useAuthedUser();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (loading) {\n        return /*#__PURE__*/_jsxDEV(FdmLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 18\n        }, this);\n      }\n\n      if (AuthService.isAuthed && (!roles || roles.includes(authedUser.role))) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/auth/login\",\n          state: {\n            redirect: props.location.pathname\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FdmAuthedRoute, \"FXiLLfI/tuZOqlCpef1kQaUjxaA=\", false, function () {\n  return [useAuthedUser];\n});\n\n_c = FdmAuthedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"FdmAuthedRoute\");","map":{"version":3,"sources":["/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/shared/components/FdmAuthedRoute.tsx"],"names":["React","Redirect","Route","AuthService","useAuthedUser","FdmLoading","FdmAuthedRoute","component","Component","roles","rest","authedUser","loading","props","isAuthed","includes","role","pathname","state","redirect","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAA4C,cAA5C;AACA,SAASC,WAAT,QAA4B,gCAA5B;AAEA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAOA,OAAO,MAAMC,cAA+B,GAAG,CAAC;AAC9CC,EAAAA,SAAS,EAAEC,SADmC;AAE9CC,EAAAA,KAF8C;AAG9C,KAAGC;AAH2C,CAAD,KAIzC;AAAA;;AACJ,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0BR,aAAa,EAA7C;AACA,sBACE,QAAC,KAAD,OACMM,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IAAW;AACjB,UAAID,OAAJ,EAAa;AACX,4BAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,UAAIT,WAAW,CAACW,QAAZ,KAAyB,CAACL,KAAD,IAAUA,KAAK,CAACM,QAAN,CAAgBJ,UAAD,CAAoBK,IAAnC,CAAnC,CAAJ,EAAkF;AAChF,4BAAO,QAAC,SAAD,OAAeH;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AAED,0BACE,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AAAEI,UAAAA,QAAQ,EAAE,aAAZ;AAA2BC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAEN,KAAK,CAACO,QAAN,CAAeH;AAA3B;AAAlC;AADN;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;AAhBH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA1BM;;GAAMX,c;UAKqBF,a;;;KALrBE,c","sourcesContent":["import React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router\";\nimport { AuthService } from \"../../modules/auth/AuthService\";\nimport { UserRole } from \"../enums/UserRole\";\nimport { useAuthedUser } from \"../hooks/useAuthedUser\";\nimport { FdmLoading } from \"./FdmLoading\";\n\ninterface Props extends RouteProps {\n  component: any;\n  roles?: UserRole[];\n}\n\nexport const FdmAuthedRoute: React.FC<Props> = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  const { authedUser, loading } = useAuthedUser();\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (loading) {\n          return <FdmLoading />;\n        }\n\n        if (AuthService.isAuthed && (!roles || roles.includes((authedUser as any).role))) {\n          return <Component {...props} />;\n        }\n\n        return (\n          <Redirect\n            to={{ pathname: \"/auth/login\", state: { redirect: props.location.pathname } }}\n          />\n        );\n      }}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}