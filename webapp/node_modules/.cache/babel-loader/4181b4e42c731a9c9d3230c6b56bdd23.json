{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/auth/RegisterForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, notification } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { useOtpSender } from \"../otp/useOtpSender\";\nimport { UserFormRules } from \"../user/UserFormRules\";\nimport { AuthService } from \"./AuthService\";\nimport { RegisterFormRules } from \"./RegisterFormRules\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function RegisterForm() {\n  _s();\n\n  const [form] = useForm();\n  const [user, setUser] = useState(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [registerLoading, setRegisterLoading] = useState(false);\n  const history = useHistory();\n  const otpSender = useOtpSender();\n  const {\n    sendOtp\n  } = otpSender;\n  const submit = useCallback(async user => {\n    setSubmitLoading(true);\n    await sendOtp(user);\n    setSubmitLoading(false);\n    setUser(user);\n  }, [sendOtp]);\n  const register = useCallback(async () => {\n    setRegisterLoading(true);\n\n    try {\n      let request;\n\n      try {\n        request = await form.validateFields();\n      } catch {\n        return;\n      }\n\n      await AuthService.register(request);\n      notification.success({\n        message: \"Success\",\n        description: \"Register success, try to login your account\"\n      });\n      history.push(\"/auth/login\");\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n\n    setRegisterLoading(false);\n  }, [history, form]);\n  const {\n    SendOtpButton\n  } = otpSender;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    onFinish: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"E-mail \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      rules: RegisterFormRules.email,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"E-mail...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Username \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      rules: RegisterFormRules.username,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Password \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      rules: UserFormRules.password,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Password...\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Confirm password \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirmPassword\",\n      rules: UserFormRules.confirmPassword,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Confirm password...\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"First name \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"firstName\",\n      rules: UserFormRules.firstName,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"First name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Last name \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"lastName\",\n      rules: UserFormRules.lastName,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Last name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), !user && /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        className: \"w-full\",\n        htmlType: \"submit\",\n        loading: submitLoading,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), !!user && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: [\"OTP \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"text-red-400\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"otp\",\n        rules: RegisterFormRules.otp,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"OTP...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        children: [/*#__PURE__*/_jsxDEV(SendOtpButton, {\n          className: \"w-full mb-4\",\n          onClick: () => otpSender.sendOtp(user)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          shape: \"round\",\n          className: \"w-full\",\n          onClick: () => register(),\n          loading: registerLoading,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterForm, \"70fmPl8/IqvYlg7jS0g09qmPNBQ=\", false, function () {\n  return [useForm, useHistory, useOtpSender];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/auth/RegisterForm.tsx"],"names":["Button","Form","Input","notification","useForm","React","useCallback","useState","useHistory","NotificationUtils","useOtpSender","UserFormRules","AuthService","RegisterFormRules","RegisterForm","form","user","setUser","submitLoading","setSubmitLoading","registerLoading","setRegisterLoading","history","otpSender","sendOtp","submit","register","request","validateFields","success","message","description","push","err","console","error","SendOtpButton","email","username","password","confirmPassword","firstName","lastName","otp"],"mappings":"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","sourcesContent":["import { Button, Form, Input, notification } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport React, { useCallback, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { useOtpSender } from \"../otp/useOtpSender\";\nimport { IAddUserRequest } from \"../user/types/AddUserRequest\";\nimport { UserFormRules } from \"../user/UserFormRules\";\nimport { AuthService } from \"./AuthService\";\nimport { RegisterFormRules } from \"./RegisterFormRules\";\n\nexport function RegisterForm() {\n  const [form] = useForm();\n  const [user, setUser] = useState<IAddUserRequest | null>(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [registerLoading, setRegisterLoading] = useState(false);\n  const history = useHistory();\n  const otpSender = useOtpSender();\n\n  const { sendOtp } = otpSender;\n  const submit = useCallback(\n    async (user: IAddUserRequest) => {\n      setSubmitLoading(true);\n      await sendOtp(user);\n      setSubmitLoading(false);\n      setUser(user);\n    },\n    [sendOtp]\n  );\n\n  const register = useCallback(async () => {\n    setRegisterLoading(true);\n    try {\n      let request;\n      try {\n        request = await form.validateFields();\n      } catch {\n        return;\n      }\n\n      await AuthService.register(request);\n      \n      notification.success({\n        message: \"Success\",\n        description: \"Register success, try to login your account\",\n      });\n      history.push(\"/auth/login\");\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n    setRegisterLoading(false);\n  }, [history, form]);\n\n  const { SendOtpButton } = otpSender;\n  return (\n    <Form form={form} onFinish={submit}>\n      <label className=\"block mb-2\">\n        E-mail <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"email\" rules={RegisterFormRules.email}>\n        <Input placeholder=\"E-mail...\" />\n      </Form.Item>\n      <label className=\"block mb-2\">\n        Username <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"username\" rules={RegisterFormRules.username}>\n        <Input placeholder=\"Username...\" />\n      </Form.Item>\n      <label className=\"block mb-2\">\n        Password <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"password\" rules={UserFormRules.password}>\n        <Input placeholder=\"Password...\" type=\"password\" />\n      </Form.Item>\n      <label className=\"block mb-2\">\n        Confirm password <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"confirmPassword\" rules={UserFormRules.confirmPassword}>\n        <Input placeholder=\"Confirm password...\" type=\"password\" />\n      </Form.Item>\n      <label className=\"block mb-2\">\n        First name <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"firstName\" rules={UserFormRules.firstName}>\n        <Input placeholder=\"First name...\" />\n      </Form.Item>\n      <label className=\"block mb-2\">\n        Last name <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"lastName\" rules={UserFormRules.lastName}>\n        <Input placeholder=\"Last name...\" />\n      </Form.Item>\n      {!user && (\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            className=\"w-full\"\n            htmlType=\"submit\"\n            loading={submitLoading}\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      )}\n      {!!user && (\n        <>\n          <label className=\"block mb-2\">\n            OTP <b className=\"text-red-400\">*</b>\n          </label>\n          <Form.Item name=\"otp\" rules={RegisterFormRules.otp}>\n            <Input placeholder=\"OTP...\" />\n          </Form.Item>\n          <Form.Item>\n            <SendOtpButton\n              className=\"w-full mb-4\"\n              onClick={() => otpSender.sendOtp(user)}\n            />\n            <Button\n              type=\"primary\"\n              shape=\"round\"\n              className=\"w-full\"\n              onClick={() => register()}\n              loading={registerLoading}\n            >\n              Register\n            </Button>\n          </Form.Item>\n        </>\n      )}\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}