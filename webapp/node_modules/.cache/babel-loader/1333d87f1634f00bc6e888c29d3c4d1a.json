{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/course/CourseToggleButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, notification, Popconfirm } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { EntityStatus } from \"../../shared/enums/EntityStatus\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { CourseService } from \"./CourseService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CourseToggleButton(props) {\n  _s();\n\n  const {\n    course,\n    ...restProps\n  } = props;\n  const [status, setStatus] = useState(course.status);\n  const [loading, setLoading] = useState(false);\n  const toggleCourse = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const newStatus = status === EntityStatus.ACTIVE ? EntityStatus.DISABLED : EntityStatus.ACTIVE;\n      await CourseService.updateStatus(course.id, newStatus);\n      setStatus(newStatus);\n      notification.success({\n        message: \"Success\",\n        description: \"Update course's status success\"\n      });\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n\n    setLoading(false);\n  }, [course, status]);\n  const isActive = status === EntityStatus.ACTIVE;\n  return /*#__PURE__*/_jsxDEV(Popconfirm, {\n    title: `Are you sure to ${isActive ? \"disable\" : \"active\"} this course?`,\n    onConfirm: toggleCourse,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      danger: isActive,\n      type: \"primary\",\n      shape: \"round\",\n      onChange: toggleCourse,\n      loading: loading,\n      ...restProps,\n      children: [isActive ? \"Disable\" : \"Active\", \" course\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CourseToggleButton, \"3wrneIa/njugL0hGAEPSs//DHEw=\");\n\n_c = CourseToggleButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseToggleButton\");","map":{"version":3,"sources":["/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/course/CourseToggleButton.tsx"],"names":["Button","notification","Popconfirm","React","useCallback","useState","EntityStatus","NotificationUtils","CourseService","CourseToggleButton","props","course","restProps","status","setStatus","loading","setLoading","toggleCourse","newStatus","ACTIVE","DISABLED","updateStatus","id","success","message","description","err","console","error","isActive"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,YAAjB,EAA+BC,UAA/B,QAAiD,MAAjD;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,YAAT,QAA6B,iCAA7B;AACA,SAASC,iBAAT,QAAkC,sCAAlC;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAOA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAA4D;AAAA;;AACjE,QAAM;AAAEC,IAAAA,MAAF;AAAU,OAAGC;AAAb,MAA2BF,KAAjC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACM,MAAM,CAACE,MAAR,CAApC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMY,YAAY,GAAGb,WAAW,CAAC,YAAY;AAC3CY,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAME,SAAS,GACbL,MAAM,KAAKP,YAAY,CAACa,MAAxB,GACIb,YAAY,CAACc,QADjB,GAEId,YAAY,CAACa,MAHnB;AAIA,YAAMX,aAAa,CAACa,YAAd,CAA2BV,MAAM,CAACW,EAAlC,EAAsCJ,SAAtC,CAAN;AACAJ,MAAAA,SAAS,CAACI,SAAD,CAAT;AACAjB,MAAAA,YAAY,CAACsB,OAAb,CAAqB;AACnBC,QAAAA,OAAO,EAAE,SADU;AAEnBC,QAAAA,WAAW,EAAE;AAFM,OAArB;AAID,KAXD,CAWE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAnB,MAAAA,iBAAiB,CAACqB,KAAlB,CAAwBF,GAAG,CAACF,OAA5B;AACD;;AACDR,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAlB+B,EAkB7B,CAACL,MAAD,EAASE,MAAT,CAlB6B,CAAhC;AAoBA,QAAMgB,QAAQ,GAAGhB,MAAM,KAAKP,YAAY,CAACa,MAAzC;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAG,mBAAkBU,QAAQ,GAAG,SAAH,GAAe,QAAS,eAD5D;AAEE,IAAA,SAAS,EAAEZ,YAFb;AAAA,2BAIE,QAAC,MAAD;AACE,MAAA,MAAM,EAAEY,QADV;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,QAAQ,EAAEZ,YAJZ;AAKE,MAAA,OAAO,EAAEF,OALX;AAAA,SAMMH,SANN;AAAA,iBAQGiB,QAAQ,GAAG,SAAH,GAAe,QAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA5CepB,kB;;KAAAA,kB","sourcesContent":["import { Button, notification, Popconfirm } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { ICourse } from \"../../shared/entities/ICourse\";\nimport { EntityStatus } from \"../../shared/enums/EntityStatus\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { CourseService } from \"./CourseService\";\n\ninterface ICoureToggleButtonProps {\n  course: ICourse;\n  [key: string]: any;\n}\n\nexport function CourseToggleButton(props: ICoureToggleButtonProps) {\n  const { course, ...restProps } = props;\n  const [status, setStatus] = useState(course.status);\n  const [loading, setLoading] = useState(false);\n\n  const toggleCourse = useCallback(async () => {\n    setLoading(true);\n    try {\n      const newStatus =\n        status === EntityStatus.ACTIVE\n          ? EntityStatus.DISABLED\n          : EntityStatus.ACTIVE;\n      await CourseService.updateStatus(course.id, newStatus);\n      setStatus(newStatus);\n      notification.success({\n        message: \"Success\",\n        description: \"Update course's status success\",\n      });\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n    setLoading(false);\n  }, [course, status]);\n\n  const isActive = status === EntityStatus.ACTIVE;\n\n  return (\n    <Popconfirm\n      title={`Are you sure to ${isActive ? \"disable\" : \"active\"} this course?`}\n      onConfirm={toggleCourse}\n    >\n      <Button\n        danger={isActive}\n        type=\"primary\"\n        shape=\"round\"\n        onChange={toggleCourse}\n        loading={loading}\n        {...restProps}\n      >\n        {isActive ? \"Disable\" : \"Active\"} course\n      </Button>\n    </Popconfirm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}