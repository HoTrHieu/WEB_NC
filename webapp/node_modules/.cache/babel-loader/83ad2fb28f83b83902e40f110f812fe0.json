{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/admin/AdminPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from 'react';\nimport { MenuUnfoldOutlined, MenuFoldOutlined, TeamOutlined, ReadFilled, UserOutlined } from '@ant-design/icons';\nimport { useHistory } from 'react-router';\nimport { useQuery } from \"../../shared/hooks/useQuery.hook\";\nimport { Menu, Button, Table, Form, Input, InputNumber, Switch } from 'antd';\nimport { UserService } from '../user/UserService';\nimport { UserRole } from '../../shared/enums/UserRole';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 64\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\nexport function AdminPage(props) {\n  _s();\n\n  var _userList$data;\n\n  const history = useHistory();\n  const [collapsed, setCollapsed] = useState(false);\n  const [req, setReq] = useState({\n    page: 1,\n    pageSize: 10,\n    role: UserRole.TEACHER\n  });\n  const [form] = Form.useForm();\n  const [editingId, setEditingId] = useState('');\n\n  const isEditing = record => record.id === editingId;\n\n  const userList = useQuery(useCallback(() => UserService.search(req), [req]));\n\n  const changeStatus = value => {\n    console.log('ok hieu', value);\n  };\n\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    editable: false\n  }, {\n    title: \"USER NAME\",\n    dataIndex: \"username\",\n    editable: true\n  }, {\n    title: \"FIRST NAME\",\n    dataIndex: \"firstName\",\n    editable: true\n  }, {\n    title: \"LAST NAME\",\n    dataIndex: \"lastName\",\n    editable: true\n  }, {\n    title: \"EMAIL\",\n    dataIndex: \"email\",\n    editable: true\n  }, {\n    title: \"STATUS\",\n    dataIndex: \"status\",\n    editable: true,\n    render: () => /*#__PURE__*/_jsxDEV(Switch, {\n      defaultChecked: true,\n      onChange: e => changeStatus(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this)\n  }, {\n    title: \"CREATED DATE\",\n    dataIndex: \"createdDate\",\n    editable: false\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex space-x-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => setCollapsed(!collapsed),\n        style: {\n          marginBottom: 16\n        },\n        children: /*#__PURE__*/React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        defaultSelectedKeys: [props.location.pathname],\n        defaultOpenKeys: ['admin/students'],\n        mode: \"inline\",\n        theme: \"dark\",\n        onSelect: e => history.push(e.key),\n        inlineCollapsed: collapsed,\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(TeamOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 52\n          }, this),\n          children: \"Qu\\u1EA3n l\\xFD h\\u1ECDc vi\\xEAn\"\n        }, \"/admin/students\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 52\n          }, this),\n          children: \"Qu\\u1EA3n l\\xFD gi\\u1EA3ng vi\\xEAn\"\n        }, \"/admin/teachers\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          icon: /*#__PURE__*/_jsxDEV(ReadFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 51\n          }, this),\n          children: \"Qu\\u1EA3n l\\xFD kh\\xF3a h\\u1ECDc\"\n        }, \"/admin/courses\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-11/12\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        loading: userList.loading || !!userList.error,\n        dataSource: (_userList$data = userList.data) === null || _userList$data === void 0 ? void 0 : _userList$data.items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminPage, \"gFEQBqh860l1TjZlLBlI4M65xH8=\", false, function () {\n  return [useHistory, Form.useForm, useQuery];\n});\n\n_c2 = AdminPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"AdminPage\");","map":{"version":3,"sources":["/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/admin/AdminPage.tsx"],"names":["React","useState","useCallback","MenuUnfoldOutlined","MenuFoldOutlined","TeamOutlined","ReadFilled","UserOutlined","useHistory","useQuery","Menu","Button","Table","Form","Input","InputNumber","Switch","UserService","UserRole","Column","ColumnGroup","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","AdminPage","props","history","collapsed","setCollapsed","req","setReq","page","pageSize","role","TEACHER","form","useForm","editingId","setEditingId","isEditing","id","userList","search","changeStatus","value","console","log","columns","editable","render","e","marginBottom","createElement","location","pathname","push","key","loading","error","data","items"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  TeamOutlined,\n  ReadFilled,\n  UserOutlined\n} from '@ant-design/icons';\nimport { RouteComponentProps, useHistory } from 'react-router';\nimport { useQuery } from \"../../shared/hooks/useQuery.hook\";\nimport { Menu, Button, Table, Tag, Space, Popconfirm, Typography, Form, Input, InputNumber, Switch } from 'antd';\n\nimport { UserService } from '../user/UserService'\nimport { IContentSearchRequest } from '../user/types/SearchUserRequest';\nimport { UserRole } from '../../shared/enums/UserRole';\nconst { Column, ColumnGroup } = Table;\n\ninterface Item {\n  username: string; \n  firstName: string;\n  lastName: string; \n  email: string;\n  status: string;\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}: any) => {\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{ margin: 0 }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n \nexport function AdminPage(props: RouteComponentProps) {\n  const history = useHistory();\n  const [collapsed, setCollapsed] = useState(false);\n  const [req, setReq] = useState({\n    page: 1,\n    pageSize: 10,\n    role: UserRole.TEACHER\n  })\n  const [form] = Form.useForm();\n  const [editingId, setEditingId] = useState('');\n  const isEditing = (record: any) => record.id === editingId;\n\n  const userList = useQuery(\n    useCallback(()=> UserService.search(req), [req])\n  );\n  \n  const changeStatus = (value: any)=> {\n    console.log('ok hieu', value)\n  }\n\n  const columns = [\n    {\n      title: \"ID\", \n      dataIndex: \"id\",\n      editable: false,\n    },\n    {\n      title: \"USER NAME\",\n      dataIndex: \"username\",\n      editable: true,\n    },\n    {\n      title: \"FIRST NAME\",\n      dataIndex: \"firstName\",\n      editable: true,\n    },\n    {\n      title: \"LAST NAME\",\n      dataIndex: \"lastName\",\n      editable: true,\n    },\n    {\n      title: \"EMAIL\",\n      dataIndex: \"email\",\n      editable: true,\n    },\n    {\n      title: \"STATUS\",\n      dataIndex: \"status\",\n      editable: true,\n      render: () => <Switch defaultChecked onChange={(e) => changeStatus(e)} />\n    },\n    {\n      title: \"CREATED DATE\",\n      dataIndex: \"createdDate\",\n      editable: false,\n    }\n  ]\n\n  return (\n    <div className=\"flex space-x-4\">\n      <div className=\"\">\n        <Button type=\"primary\" onClick={()=>setCollapsed(!collapsed)} style={{ marginBottom: 16 }}>\n            {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\n          </Button>\n          <Menu\n            defaultSelectedKeys={[props.location.pathname]}\n            defaultOpenKeys={['admin/students']}\n            mode=\"inline\"\n            theme=\"dark\"\n            onSelect={e => history.push(e.key as any)}\n            inlineCollapsed={collapsed}\n          >\n            <Menu.Item key=\"/admin/students\" icon={<TeamOutlined />}>\n              Quản lý học viên\n            </Menu.Item>\n            <Menu.Item key=\"/admin/teachers\" icon={<UserOutlined />}>\n              Quản lý giảng viên\n            </Menu.Item>\n            <Menu.Item key=\"/admin/courses\" icon={<ReadFilled />}>\n              Quản lý khóa học\n            </Menu.Item>\n          </Menu>\n        </div>\n      <div className=\"w-11/12\">\n        <Table \n          columns={columns}\n          loading={userList.loading || !!userList.error} \n          dataSource={userList.data?.items}\n        />\n\n\n      {/* <Form form={form} component={false}>\n        <Table\n          components={{\n            body: {\n              cell: EditableCell,\n            },\n          }}\n          bordered\n          dataSource={userList.data?.items}\n          columns={mergedColumns}\n          rowClassName=\"editable-row\"\n          pagination={{\n            onChange: cancel,\n          }}\n        />\n      </Form> */}\n\n\n        {/* <Table loading={userList.loading || !!userList.error} dataSource={userList.data?.items}>\n          \n          <Column title=\"ID\" dataIndex=\"id\" key=\"id\" />\n          <Column title=\"USER NAME\" dataIndex=\"username\" key=\"username\" />\n          <Column title=\"FIRST NAME\" dataIndex=\"firstName\" key=\"firstName\" />\n          <Column title=\"LAST NAME\" dataIndex=\"lastName\" key=\"lastName\" />\n          <Column title=\"EMAIL\" dataIndex=\"email\" key=\"email\" />\n          <Column title=\"ROLE\" dataIndex=\"role\" key=\"role\" />\n          <Column title=\"STATUS\" dataIndex=\"status\" key=\"status\" />\n          <Column title=\"CREATED DATE\" dataIndex=\"createdDate\" key=\"createdDate\" />\n\n          <Column\n            title=\"Tags\"\n            dataIndex=\"tags\"\n            key=\"tag\"\n            render= {(_: any, record: any) => {\n              console.log(\"dadda: \", _, record)\n                const editable = isEditing(record);\n                return editable ? (\n                  <span>\n                    <a onClick={() => save(record.key)} style={{ marginRight: 8 }}>\n                      Save\n                    </a>\n                    <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n                      <a>Cancel</a>\n                    </Popconfirm>\n                  </span>\n                ) : (\n                  <Typography.Link disabled={editingId !== ''} onClick={() => edit(record)}>\n                    Edit\n                  </Typography.Link>\n                );\n              }\n            }\n          />\n            \n          \n        </Table> */}\n      </div>\n\n      \n      </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}