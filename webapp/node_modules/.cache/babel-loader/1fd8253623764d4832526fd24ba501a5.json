{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/auth/LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { GoogleCircleFilled } from \"@ant-design/icons\";\nimport { Button, Form, Input, notification } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport React, { useCallback } from \"react\";\nimport { UserFormRules } from \"../user/UserFormRules\";\nimport { AuthService } from \"./AuthService\";\nimport { HOST } from \"../../shared/constants/constants\";\nimport { ApiEndpoint } from \"../../shared/constants/ApiEndpoint\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LoginForm(props) {\n  _s();\n\n  const [form] = useForm();\n  const submit = useCallback(async values => {\n    const success = await AuthService.login(values.username, values.password);\n\n    if (success) {\n      window.location.pathname = props.redirect || \"/\";\n    } else {\n      notification.error({\n        message: \"Error\",\n        description: \"Username or password are wrong\"\n      });\n    }\n  }, [props.redirect]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    onFinish: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Username \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      rules: UserFormRules.username,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Username...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Password \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      rules: UserFormRules.password,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Password...\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        className: \"w-full mb-4\",\n        htmlType: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        className: \"w-full\",\n        danger: true,\n        onClick: () => window.location.replace(HOST + ApiEndpoint.auth.loginGoogle),\n        children: [/*#__PURE__*/_jsxDEV(GoogleCircleFilled, {\n          className: \"text-xl\",\n          style: {\n            transform: \"translateY(-2px)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \", \"Sign-in with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"ShgUXYLYq3GX8M4O8jxVHbiFCdc=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/auth/LoginForm.tsx"],"names":["GoogleCircleFilled","Button","Form","Input","notification","useForm","React","useCallback","UserFormRules","AuthService","HOST","ApiEndpoint","LoginForm","props","form","submit","values","success","login","username","password","window","location","pathname","redirect","error","message","description","replace","auth","loginGoogle","transform"],"mappings":"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","sourcesContent":["import { GoogleCircleFilled } from \"@ant-design/icons\";\nimport { Button, Form, Input, notification } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport React, { useCallback } from \"react\";\nimport { UserFormRules } from \"../user/UserFormRules\";\nimport { AuthService } from \"./AuthService\";\nimport { HOST } from \"../../shared/constants/constants\";\nimport { ApiEndpoint } from \"../../shared/constants/ApiEndpoint\";\ninterface ILoginFormProps {\n  redirect?: string;\n}\n\nexport function LoginForm(props: ILoginFormProps) {\n  const [form] = useForm();\n  const submit = useCallback(\n    async (values: any) => {\n      const success = await AuthService.login(values.username, values.password);\n      if (success) {\n        window.location.pathname = props.redirect || \"/\";\n      } else {\n        notification.error({\n          message: \"Error\",\n          description: \"Username or password are wrong\"\n        })\n      }\n    },\n    [props.redirect]\n  );\n  return (\n    <Form form={form} onFinish={submit}>\n      <label className=\"block mb-2\">\n        Username <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"username\" rules={UserFormRules.username}>\n        <Input placeholder=\"Username...\" />\n      </Form.Item>\n      <label className=\"block mb-2\">\n        Password <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"password\" rules={UserFormRules.password}>\n        <Input placeholder=\"Password...\" type=\"password\" />\n      </Form.Item>\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          className=\"w-full mb-4\"\n          htmlType=\"submit\"\n        >\n          Login\n        </Button>\n        <Button\n          type=\"primary\"\n          shape=\"round\"\n          className=\"w-full\"\n          danger\n          onClick={() =>\n            (window.location.replace(HOST + ApiEndpoint.auth.loginGoogle))\n          }\n        >\n          <GoogleCircleFilled\n            className=\"text-xl\"\n            style={{ transform: \"translateY(-2px)\" }}\n          />{\" \"}\n          Sign-in with Google\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}