{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/admin/UserManageComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory } from 'react-router';\nimport { Table, Form, Switch } from 'antd';\nimport { UserService } from '../user/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UserManageComponent(props) {\n  _s();\n\n  var _userList$data;\n\n  const history = useHistory();\n  const {\n    userList\n  } = props || {};\n  const [form] = Form.useForm();\n\n  const changeStatus = value => {\n    const {\n      id,\n      status\n    } = value;\n    const res = UserService.updateStatus({\n      id,\n      status\n    });\n  }; // const customSwitch = (value: any) => {\n  //   console.log('value: ', value);\n  //   return <Switch defaultChecked onChange={(e, record) => changeStatus(e, record)} />\n  // }\n\n\n  const columns = [{\n    title: \"ID\",\n    dataIndex: \"id\",\n    editable: false\n  }, {\n    title: \"USER NAME\",\n    dataIndex: \"username\",\n    editable: false\n  }, {\n    title: \"FIRST NAME\",\n    dataIndex: \"firstName\",\n    editable: false\n  }, {\n    title: \"LAST NAME\",\n    dataIndex: \"lastName\",\n    editable: false\n  }, {\n    title: \"EMAIL\",\n    dataIndex: \"email\",\n    editable: false\n  }, {\n    title: \"STATUS\",\n    dataIndex: \"status\",\n    editable: true,\n    render: (_, record) => {\n      return /*#__PURE__*/_jsxDEV(Switch, {\n        defaultChecked: record.status === 1,\n        onChange: () => changeStatus(record)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    title: \"CREATED DATE\",\n    dataIndex: \"createdDate\",\n    editable: false\n  }];\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        //inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: mergedColumns,\n      loading: userList.loading || !!userList.error,\n      dataSource: (_userList$data = userList.data) === null || _userList$data === void 0 ? void 0 : _userList$data.items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserManageComponent, \"2o6xFfdZ0tpdfdMZvEX4SzPKzJA=\", false, function () {\n  return [useHistory, Form.useForm];\n});\n\n_c = UserManageComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserManageComponent\");","map":{"version":3,"sources":["/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/admin/UserManageComponent.tsx"],"names":["React","useHistory","Table","Form","Switch","UserService","UserManageComponent","props","history","userList","form","useForm","changeStatus","value","id","status","res","updateStatus","columns","title","dataIndex","editable","render","_","record","mergedColumns","map","col","onCell","loading","error","data","items"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\n\nimport { useHistory } from 'react-router';\nimport { Menu, Button, Table, Tag, Space, Popconfirm, Typography, Form, Input, InputNumber, Switch } from 'antd';\nimport { UserService } from '../user/UserService'\n\n\n\nexport function UserManageComponent(props: any) {\n  const history = useHistory();\n  const {userList} = props || {};\n\n  const [form] = Form.useForm();\n\n  const changeStatus = (value: any)=> {\n    const {id, status} = value;\n    const res = UserService.updateStatus({id, status})\n  }\n\n\n  // const customSwitch = (value: any) => {\n  //   console.log('value: ', value);\n  //   return <Switch defaultChecked onChange={(e, record) => changeStatus(e, record)} />\n  // }\n  const columns = [\n    {\n      title: \"ID\", \n      dataIndex: \"id\",\n      editable: false,\n    },\n    {\n      title: \"USER NAME\",\n      dataIndex: \"username\",\n      editable: false,\n    },\n    {\n      title: \"FIRST NAME\",\n      dataIndex: \"firstName\",\n      editable: false,\n    },\n    {\n      title: \"LAST NAME\",\n      dataIndex: \"lastName\",\n      editable: false,\n    },\n    {\n      title: \"EMAIL\",\n      dataIndex: \"email\",\n      editable: false,\n    },\n    {\n      title: \"STATUS\",\n      dataIndex: \"status\",\n      editable: true,\n      render: (_: any, record: any) => {\n        return <Switch defaultChecked={record.status === 1} onChange={() => changeStatus(record)} />\n      }\n    },\n    {\n      title: \"CREATED DATE\",\n      dataIndex: \"createdDate\",\n      editable: false,\n    }\n  ]\n\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n    return {\n      ...col,\n      onCell: (record: any) => ({\n        record,\n        //inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n      }),\n    };\n  });\n\n  return (\n    <Form form={form} component={false}>\n      <Table \n        columns={mergedColumns}\n        loading={userList.loading || !!userList.error} \n        dataSource={userList.data?.items}\n      />      \n    </Form>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}