{"ast":null,"code":"import Axios from \"axios\";\nimport { AuthService } from \"./modules/auth/AuthService\";\nimport { AuthedApiEndpoints } from \"./shared/constants/ApiEndpoint\";\nexport function initAxiosInterceptors() {\n  Axios.interceptors.request.use(req => {\n    const accessToken = AuthService.accessToken;\n\n    if (!accessToken) {\n      if (AuthedApiEndpoints.includes(req.url)) {\n        window.location.pathname = \"/auth/login\";\n      }\n    } else {\n      req.headers.Authorization = `Bearer ${accessToken}`;\n    }\n\n    return req;\n  });\n  Axios.interceptors.response.use(resp => resp, async err => {\n    if (AuthedApiEndpoints.includes(err.config.url)) {\n      var _err$response;\n\n      if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        if (!!(await AuthService.refreshAccessToken())) {\n          return Axios.request(err.config);\n        }\n\n        window.location.pathname = \"/auth/login\";\n        return;\n      }\n    }\n\n    throw err;\n  });\n}","map":{"version":3,"sources":["/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/initAxiosInterceptors.ts"],"names":["Axios","AuthService","AuthedApiEndpoints","initAxiosInterceptors","interceptors","request","use","req","accessToken","includes","url","window","location","pathname","headers","Authorization","response","resp","err","config","status","refreshAccessToken"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AAEA,OAAO,SAASC,qBAAT,GAAiC;AACtCH,EAAAA,KAAK,CAACI,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAAgCC,GAAD,IAAS;AACtC,UAAMC,WAAW,GAAGP,WAAW,CAACO,WAAhC;;AACA,QAAI,CAACA,WAAL,EAAkB;AAChB,UAAIN,kBAAkB,CAACO,QAAnB,CAA4BF,GAAG,CAACG,GAAhC,CAAJ,EAAiD;AAC/CC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,aAA3B;AACD;AACF,KAJD,MAIO;AACLN,MAAAA,GAAG,CAACO,OAAJ,CAAYC,aAAZ,GAA6B,UAASP,WAAY,EAAlD;AACD;;AAED,WAAOD,GAAP;AACD,GAXD;AAaAP,EAAAA,KAAK,CAACI,YAAN,CAAmBY,QAAnB,CAA4BV,GAA5B,CACGW,IAAD,IAAUA,IADZ,EAEE,MAAOC,GAAP,IAAe;AACb,QAAIhB,kBAAkB,CAACO,QAAnB,CAA4BS,GAAG,CAACC,MAAJ,CAAWT,GAAvC,CAAJ,EAAwD;AAAA;;AACtD,UAAI,CAAAQ,GAAG,SAAH,IAAAA,GAAG,WAAH,6BAAAA,GAAG,CAAEF,QAAL,gEAAeI,MAAf,MAA0B,GAA9B,EAAmC;AACjC,YAAI,CAAC,EAAE,MAAMnB,WAAW,CAACoB,kBAAZ,EAAR,CAAL,EAAgD;AAC9C,iBAAOrB,KAAK,CAACK,OAAN,CAAca,GAAG,CAACC,MAAlB,CAAP;AACD;;AACDR,QAAAA,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2B,aAA3B;AACA;AACD;AACF;;AACD,UAAMK,GAAN;AACD,GAbH;AAeD","sourcesContent":["import Axios from \"axios\";\nimport { AuthService } from \"./modules/auth/AuthService\";\nimport { AuthedApiEndpoints } from \"./shared/constants/ApiEndpoint\";\n\nexport function initAxiosInterceptors() {\n  Axios.interceptors.request.use((req) => {\n    const accessToken = AuthService.accessToken;\n    if (!accessToken) {\n      if (AuthedApiEndpoints.includes(req.url as any)) {\n        window.location.pathname = \"/auth/login\";\n      }\n    } else {\n      req.headers.Authorization = `Bearer ${accessToken}`;\n    }\n\n    return req;\n  });\n\n  Axios.interceptors.response.use(\n    (resp) => resp,\n    async (err) => {\n      if (AuthedApiEndpoints.includes(err.config.url as any)) {\n        if (err?.response?.status === 401) {\n          if (!!(await AuthService.refreshAccessToken())) {\n            return Axios.request(err.config);\n          }\n          window.location.pathname = \"/auth/login\";\n          return;\n        }\n      }\n      throw err;\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module"}