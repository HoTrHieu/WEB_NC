{"ast":null,"code":"/*!\n * FilePondPluginMediaPreview 1.0.7\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit undefined for details.\n */\n\n/* eslint-disable */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.FilePondPluginMediaPreview = factory());\n})(this, function () {\n  'use strict';\n\n  const isPreviewableVideo = file => /^video/.test(file.type);\n\n  const isPreviewableAudio = file => /^audio/.test(file.type);\n\n  'use strict';\n\n  class AudioPlayer {\n    constructor(mediaEl, audioElems) {\n      this.mediaEl = mediaEl;\n      this.audioElems = audioElems;\n      this.onplayhead = false;\n      this.duration = 0;\n      this.timelineWidth = this.audioElems.timeline.offsetWidth - this.audioElems.playhead.offsetWidth;\n      this.moveplayheadFn = this.moveplayhead.bind(this);\n      this.registerListeners();\n    }\n\n    registerListeners() {\n      this.mediaEl.addEventListener('timeupdate', this.timeUpdate.bind(this), false);\n      this.mediaEl.addEventListener('canplaythrough', () => this.duration = this.mediaEl.duration, false);\n      this.audioElems.timeline.addEventListener('click', this.timelineClicked.bind(this), false);\n      this.audioElems.button.addEventListener('click', this.play.bind(this));\n      this.audioElems.playhead.addEventListener('mousedown', this.mouseDown.bind(this), false);\n      window.addEventListener('mouseup', this.mouseUp.bind(this), false);\n    }\n\n    play() {\n      if (this.mediaEl.paused) {\n        this.mediaEl.play();\n      } else {\n        this.mediaEl.pause();\n      }\n\n      this.audioElems.button.classList.toggle('play');\n      this.audioElems.button.classList.toggle('pause');\n    }\n\n    timeUpdate() {\n      let playPercent = this.mediaEl.currentTime / this.duration * 100;\n      this.audioElems.playhead.style.marginLeft = playPercent + '%';\n\n      if (this.mediaEl.currentTime === this.duration) {\n        this.audioElems.button.classList.toggle('play');\n        this.audioElems.button.classList.toggle('pause');\n      }\n    }\n\n    moveplayhead(event) {\n      let newMargLeft = event.clientX - this.getPosition(this.audioElems.timeline);\n\n      if (newMargLeft >= 0 && newMargLeft <= this.timelineWidth) {\n        this.audioElems.playhead.style.marginLeft = newMargLeft + 'px';\n      }\n\n      if (newMargLeft < 0) {\n        this.audioElems.playhead.style.marginLeft = '0px';\n      }\n\n      if (newMargLeft > this.timelineWidth) {\n        this.audioElems.playhead.style.marginLeft = this.timelineWidth - 4 + 'px';\n      }\n    }\n\n    timelineClicked(event) {\n      this.moveplayhead(event);\n      this.mediaEl.currentTime = this.duration * this.clickPercent(event);\n    }\n\n    mouseDown() {\n      this.onplayhead = true;\n      window.addEventListener('mousemove', this.moveplayheadFn, true);\n      this.mediaEl.removeEventListener('timeupdate', this.timeUpdate.bind(this), false);\n    }\n\n    mouseUp(event) {\n      window.removeEventListener('mousemove', this.moveplayheadFn, true);\n\n      if (this.onplayhead == true) {\n        this.moveplayhead(event); // change current time\n\n        this.mediaEl.currentTime = this.duration * this.clickPercent(event);\n        this.mediaEl.addEventListener('timeupdate', this.timeUpdate.bind(this), false);\n      }\n\n      this.onplayhead = false;\n    }\n\n    clickPercent(event) {\n      return (event.clientX - this.getPosition(this.audioElems.timeline)) / this.timelineWidth;\n    }\n\n    getPosition(el) {\n      return el.getBoundingClientRect().left;\n    }\n\n  }\n\n  const createMediaView = _ => _.utils.createView({\n    name: 'media-preview',\n    tag: 'div',\n    ignoreRect: true,\n    create: ({\n      root,\n      props\n    }) => {\n      const {\n        id\n      } = props; // get item\n\n      const item = root.query('GET_ITEM', {\n        id: props.id\n      });\n      let tagName = isPreviewableAudio(item.file) ? 'audio' : 'video';\n      root.ref.media = document.createElement(tagName);\n      root.ref.media.setAttribute('controls', true);\n      root.element.appendChild(root.ref.media);\n\n      if (isPreviewableAudio(item.file)) {\n        let docfrag = document.createDocumentFragment();\n        root.ref.audio = [];\n        root.ref.audio.container = document.createElement('div'), root.ref.audio.button = document.createElement('span'), root.ref.audio.timeline = document.createElement('div'), root.ref.audio.playhead = document.createElement('div');\n        root.ref.audio.container.className = 'audioplayer';\n        root.ref.audio.button.className = 'playpausebtn play';\n        root.ref.audio.timeline.className = 'timeline';\n        root.ref.audio.playhead.className = 'playhead';\n        root.ref.audio.timeline.appendChild(root.ref.audio.playhead);\n        root.ref.audio.container.appendChild(root.ref.audio.button);\n        root.ref.audio.container.appendChild(root.ref.audio.timeline);\n        docfrag.appendChild(root.ref.audio.container);\n        root.element.appendChild(docfrag);\n      }\n    },\n    write: _.utils.createRoute({\n      DID_MEDIA_PREVIEW_LOAD: ({\n        root,\n        props\n      }) => {\n        const {\n          id\n        } = props; // get item\n\n        const item = root.query('GET_ITEM', {\n          id: props.id\n        });\n        if (!item) return;\n        let URL = window.URL || window.webkitURL;\n        let blob = new Blob([item.file], {\n          type: item.file.type\n        });\n        root.ref.media.type = item.file.type;\n        root.ref.media.src = URL.createObjectURL(blob); // create audio player in case of audio file\n\n        if (isPreviewableAudio(item.file)) {\n          new AudioPlayer(root.ref.media, root.ref.audio);\n        } // determine dimensions and update panel accordingly\n\n\n        root.ref.media.addEventListener('loadeddata', () => {\n          let height = 75; // default height for audio panel\n\n          if (isPreviewableVideo(item.file)) {\n            let containerWidth = root.ref.media.offsetWidth;\n            let factor = root.ref.media.videoWidth / containerWidth;\n            height = root.ref.media.videoHeight / factor;\n          }\n\n          root.dispatch('DID_UPDATE_PANEL_HEIGHT', {\n            id: props.id,\n            height: height\n          });\n        }, false);\n      }\n    })\n  });\n\n  const createMediaWrapperView = _ => {\n    /**\n     * Write handler for when preview container has been created\n     */\n    const didCreatePreviewContainer = ({\n      root,\n      props\n    }) => {\n      const {\n        id\n      } = props;\n      const item = root.query('GET_ITEM', id);\n      if (!item) return; // the preview is now ready to be drawn\n\n      root.dispatch('DID_MEDIA_PREVIEW_LOAD', {\n        id\n      });\n    };\n    /**\n     * Constructor\n     */\n\n\n    const create = ({\n      root,\n      props\n    }) => {\n      const media = createMediaView(_); // append media presenter\n\n      root.ref.media = root.appendChildView(root.createChildView(media, {\n        id: props.id\n      }));\n    };\n\n    return _.utils.createView({\n      name: 'media-preview-wrapper',\n      create,\n      write: _.utils.createRoute({\n        // media preview stated\n        DID_MEDIA_PREVIEW_CONTAINER_CREATE: didCreatePreviewContainer\n      })\n    });\n  };\n  /**\n   * Media Preview Plugin\n   */\n\n\n  const plugin = fpAPI => {\n    const {\n      addFilter,\n      utils\n    } = fpAPI;\n    const {\n      Type,\n      createRoute\n    } = utils;\n    const mediaWrapperView = createMediaWrapperView(fpAPI); // called for each view that is created right after the 'create' method\n\n    addFilter('CREATE_VIEW', viewAPI => {\n      // get reference to created view\n      const {\n        is,\n        view,\n        query\n      } = viewAPI; // only hook up to item view\n\n      if (!is('file')) {\n        return;\n      } // create the media preview plugin, but only do so if the item is video or audio\n\n\n      const didLoadItem = ({\n        root,\n        props\n      }) => {\n        const {\n          id\n        } = props;\n        const item = query('GET_ITEM', id);\n\n        if (!item || item.archived || !isPreviewableVideo(item.file) && !isPreviewableAudio(item.file)) {\n          return;\n        } // set preview view\n\n\n        root.ref.mediaPreview = view.appendChildView(view.createChildView(mediaWrapperView, {\n          id\n        })); // now ready\n\n        root.dispatch('DID_MEDIA_PREVIEW_CONTAINER_CREATE', {\n          id\n        });\n      }; // start writing\n\n\n      view.registerWriter(createRoute({\n        DID_LOAD_ITEM: didLoadItem\n      }, ({\n        root,\n        props\n      }) => {\n        const {\n          id\n        } = props;\n        const item = query('GET_ITEM', id); // don't do anything while not an video or audio file or hidden\n\n        if (!isPreviewableVideo(item.file) && !isPreviewableAudio(item.file) || root.rect.element.hidden) return;\n      }));\n    }); // expose plugin\n\n    return {\n      options: {\n        allowVideoPreview: [true, Type.BOOLEAN],\n        allowAudioPreview: [true, Type.BOOLEAN]\n      }\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n\n  const isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(new CustomEvent('FilePond:pluginloaded', {\n      detail: plugin\n    }));\n  }\n\n  return plugin;\n});","map":{"version":3,"sources":["/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/node_modules/filepond-plugin-media-preview/dist/filepond-plugin-media-preview.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","FilePondPluginMediaPreview","isPreviewableVideo","file","test","type","isPreviewableAudio","AudioPlayer","constructor","mediaEl","audioElems","onplayhead","duration","timelineWidth","timeline","offsetWidth","playhead","moveplayheadFn","moveplayhead","bind","registerListeners","addEventListener","timeUpdate","timelineClicked","button","play","mouseDown","window","mouseUp","paused","pause","classList","toggle","playPercent","currentTime","style","marginLeft","event","newMargLeft","clientX","getPosition","clickPercent","removeEventListener","el","getBoundingClientRect","left","createMediaView","_","utils","createView","name","tag","ignoreRect","create","root","props","id","item","query","tagName","ref","media","document","createElement","setAttribute","element","appendChild","docfrag","createDocumentFragment","audio","container","className","write","createRoute","DID_MEDIA_PREVIEW_LOAD","URL","webkitURL","blob","Blob","src","createObjectURL","height","containerWidth","factor","videoWidth","videoHeight","dispatch","createMediaWrapperView","didCreatePreviewContainer","appendChildView","createChildView","DID_MEDIA_PREVIEW_CONTAINER_CREATE","plugin","fpAPI","addFilter","Type","mediaWrapperView","viewAPI","is","view","didLoadItem","archived","mediaPreview","registerWriter","DID_LOAD_ITEM","rect","hidden","options","allowVideoPreview","BOOLEAN","allowAudioPreview","isBrowser","dispatchEvent","CustomEvent","detail"],"mappings":"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","sourcesContent":["/*!\n * FilePondPluginMediaPreview 1.0.7\n * Licensed under MIT, https://opensource.org/licenses/MIT/\n * Please visit undefined for details.\n */\n\n/* eslint-disable */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined'\n    ? (module.exports = factory())\n    : typeof define === 'function' && define.amd\n    ? define(factory)\n    : ((global =\n        typeof globalThis !== 'undefined' ? globalThis : global || self),\n      (global.FilePondPluginMediaPreview = factory()));\n})(this, function () {\n  'use strict';\n\n  const isPreviewableVideo = (file) => /^video/.test(file.type);\n\n  const isPreviewableAudio = (file) => /^audio/.test(file.type);\n\n  ('use strict');\n\n  class AudioPlayer {\n    constructor(mediaEl, audioElems) {\n      this.mediaEl = mediaEl;\n      this.audioElems = audioElems;\n      this.onplayhead = false;\n      this.duration = 0;\n      this.timelineWidth =\n        this.audioElems.timeline.offsetWidth -\n        this.audioElems.playhead.offsetWidth;\n      this.moveplayheadFn = this.moveplayhead.bind(this);\n      this.registerListeners();\n    }\n\n    registerListeners() {\n      this.mediaEl.addEventListener(\n        'timeupdate',\n        this.timeUpdate.bind(this),\n        false\n      );\n      this.mediaEl.addEventListener(\n        'canplaythrough',\n        () => (this.duration = this.mediaEl.duration),\n        false\n      );\n      this.audioElems.timeline.addEventListener(\n        'click',\n        this.timelineClicked.bind(this),\n        false\n      );\n      this.audioElems.button.addEventListener('click', this.play.bind(this));\n      this.audioElems.playhead.addEventListener(\n        'mousedown',\n        this.mouseDown.bind(this),\n        false\n      );\n      window.addEventListener('mouseup', this.mouseUp.bind(this), false);\n    }\n\n    play() {\n      if (this.mediaEl.paused) {\n        this.mediaEl.play();\n      } else {\n        this.mediaEl.pause();\n      }\n\n      this.audioElems.button.classList.toggle('play');\n      this.audioElems.button.classList.toggle('pause');\n    }\n\n    timeUpdate() {\n      let playPercent = (this.mediaEl.currentTime / this.duration) * 100;\n      this.audioElems.playhead.style.marginLeft = playPercent + '%';\n\n      if (this.mediaEl.currentTime === this.duration) {\n        this.audioElems.button.classList.toggle('play');\n        this.audioElems.button.classList.toggle('pause');\n      }\n    }\n\n    moveplayhead(event) {\n      let newMargLeft =\n        event.clientX - this.getPosition(this.audioElems.timeline);\n\n      if (newMargLeft >= 0 && newMargLeft <= this.timelineWidth) {\n        this.audioElems.playhead.style.marginLeft = newMargLeft + 'px';\n      }\n\n      if (newMargLeft < 0) {\n        this.audioElems.playhead.style.marginLeft = '0px';\n      }\n\n      if (newMargLeft > this.timelineWidth) {\n        this.audioElems.playhead.style.marginLeft =\n          this.timelineWidth - 4 + 'px';\n      }\n    }\n\n    timelineClicked(event) {\n      this.moveplayhead(event);\n      this.mediaEl.currentTime = this.duration * this.clickPercent(event);\n    }\n\n    mouseDown() {\n      this.onplayhead = true;\n      window.addEventListener('mousemove', this.moveplayheadFn, true);\n      this.mediaEl.removeEventListener(\n        'timeupdate',\n        this.timeUpdate.bind(this),\n        false\n      );\n    }\n\n    mouseUp(event) {\n      window.removeEventListener('mousemove', this.moveplayheadFn, true);\n\n      if (this.onplayhead == true) {\n        this.moveplayhead(event); // change current time\n\n        this.mediaEl.currentTime = this.duration * this.clickPercent(event);\n        this.mediaEl.addEventListener(\n          'timeupdate',\n          this.timeUpdate.bind(this),\n          false\n        );\n      }\n\n      this.onplayhead = false;\n    }\n\n    clickPercent(event) {\n      return (\n        (event.clientX - this.getPosition(this.audioElems.timeline)) /\n        this.timelineWidth\n      );\n    }\n\n    getPosition(el) {\n      return el.getBoundingClientRect().left;\n    }\n  }\n\n  const createMediaView = (_) =>\n    _.utils.createView({\n      name: 'media-preview',\n      tag: 'div',\n      ignoreRect: true,\n      create: ({ root, props }) => {\n        const { id } = props; // get item\n\n        const item = root.query('GET_ITEM', {\n          id: props.id,\n        });\n        let tagName = isPreviewableAudio(item.file) ? 'audio' : 'video';\n        root.ref.media = document.createElement(tagName);\n        root.ref.media.setAttribute('controls', true);\n        root.element.appendChild(root.ref.media);\n\n        if (isPreviewableAudio(item.file)) {\n          let docfrag = document.createDocumentFragment();\n          root.ref.audio = [];\n          (root.ref.audio.container = document.createElement('div')),\n            (root.ref.audio.button = document.createElement('span')),\n            (root.ref.audio.timeline = document.createElement('div')),\n            (root.ref.audio.playhead = document.createElement('div'));\n          root.ref.audio.container.className = 'audioplayer';\n          root.ref.audio.button.className = 'playpausebtn play';\n          root.ref.audio.timeline.className = 'timeline';\n          root.ref.audio.playhead.className = 'playhead';\n          root.ref.audio.timeline.appendChild(root.ref.audio.playhead);\n          root.ref.audio.container.appendChild(root.ref.audio.button);\n          root.ref.audio.container.appendChild(root.ref.audio.timeline);\n          docfrag.appendChild(root.ref.audio.container);\n          root.element.appendChild(docfrag);\n        }\n      },\n      write: _.utils.createRoute({\n        DID_MEDIA_PREVIEW_LOAD: ({ root, props }) => {\n          const { id } = props; // get item\n\n          const item = root.query('GET_ITEM', {\n            id: props.id,\n          });\n          if (!item) return;\n          let URL = window.URL || window.webkitURL;\n          let blob = new Blob([item.file], {\n            type: item.file.type,\n          });\n          root.ref.media.type = item.file.type;\n          root.ref.media.src = URL.createObjectURL(blob); // create audio player in case of audio file\n\n          if (isPreviewableAudio(item.file)) {\n            new AudioPlayer(root.ref.media, root.ref.audio);\n          } // determine dimensions and update panel accordingly\n\n          root.ref.media.addEventListener(\n            'loadeddata',\n            () => {\n              let height = 75; // default height for audio panel\n\n              if (isPreviewableVideo(item.file)) {\n                let containerWidth = root.ref.media.offsetWidth;\n                let factor = root.ref.media.videoWidth / containerWidth;\n                height = root.ref.media.videoHeight / factor;\n              }\n\n              root.dispatch('DID_UPDATE_PANEL_HEIGHT', {\n                id: props.id,\n                height: height,\n              });\n            },\n            false\n          );\n        },\n      }),\n    });\n\n  const createMediaWrapperView = (_) => {\n    /**\n     * Write handler for when preview container has been created\n     */\n    const didCreatePreviewContainer = ({ root, props }) => {\n      const { id } = props;\n      const item = root.query('GET_ITEM', id);\n      if (!item) return; // the preview is now ready to be drawn\n\n      root.dispatch('DID_MEDIA_PREVIEW_LOAD', {\n        id,\n      });\n    };\n    /**\n     * Constructor\n     */\n\n    const create = ({ root, props }) => {\n      const media = createMediaView(_); // append media presenter\n\n      root.ref.media = root.appendChildView(\n        root.createChildView(media, {\n          id: props.id,\n        })\n      );\n    };\n\n    return _.utils.createView({\n      name: 'media-preview-wrapper',\n      create,\n      write: _.utils.createRoute({\n        // media preview stated\n        DID_MEDIA_PREVIEW_CONTAINER_CREATE: didCreatePreviewContainer,\n      }),\n    });\n  };\n\n  /**\n   * Media Preview Plugin\n   */\n\n  const plugin = (fpAPI) => {\n    const { addFilter, utils } = fpAPI;\n    const { Type, createRoute } = utils;\n    const mediaWrapperView = createMediaWrapperView(fpAPI); // called for each view that is created right after the 'create' method\n\n    addFilter('CREATE_VIEW', (viewAPI) => {\n      // get reference to created view\n      const { is, view, query } = viewAPI; // only hook up to item view\n\n      if (!is('file')) {\n        return;\n      } // create the media preview plugin, but only do so if the item is video or audio\n\n      const didLoadItem = ({ root, props }) => {\n        const { id } = props;\n        const item = query('GET_ITEM', id);\n\n        if (\n          !item ||\n          item.archived ||\n          (!isPreviewableVideo(item.file) && !isPreviewableAudio(item.file))\n        ) {\n          return;\n        } // set preview view\n\n        root.ref.mediaPreview = view.appendChildView(\n          view.createChildView(mediaWrapperView, {\n            id,\n          })\n        ); // now ready\n\n        root.dispatch('DID_MEDIA_PREVIEW_CONTAINER_CREATE', {\n          id,\n        });\n      }; // start writing\n\n      view.registerWriter(\n        createRoute(\n          {\n            DID_LOAD_ITEM: didLoadItem,\n          },\n          ({ root, props }) => {\n            const { id } = props;\n            const item = query('GET_ITEM', id); // don't do anything while not an video or audio file or hidden\n\n            if (\n              (!isPreviewableVideo(item.file) &&\n                !isPreviewableAudio(item.file)) ||\n              root.rect.element.hidden\n            )\n              return;\n          }\n        )\n      );\n    }); // expose plugin\n\n    return {\n      options: {\n        allowVideoPreview: [true, Type.BOOLEAN],\n        allowAudioPreview: [true, Type.BOOLEAN],\n      },\n    };\n  }; // fire pluginloaded event if running in browser, this allows registering the plugin when using async script tags\n\n  const isBrowser =\n    typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\n  if (isBrowser) {\n    document.dispatchEvent(\n      new CustomEvent('FilePond:pluginloaded', {\n        detail: plugin,\n      })\n    );\n  }\n\n  return plugin;\n});\n"]},"metadata":{},"sourceType":"script"}