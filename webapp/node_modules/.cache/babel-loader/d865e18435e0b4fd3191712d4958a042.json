{"ast":null,"code":"import Axios from \"axios\";\nexport class CrudService {\n  static async get(url, config) {\n    const {\n      data\n    } = await Axios.get(url, config);\n    return data;\n  }\n\n  static async create(url, payload, getResult) {\n    const {\n      data\n    } = await Axios.post(url, payload);\n    return getResult ? getResult(data) : data.result;\n  }\n\n  static async put(url, payload, method) {\n    const {\n      data\n    } = await (method ? Axios[method](url, payload) : Axios.put(url, payload));\n    return data.success;\n  }\n\n  static async delete(url) {\n    return this.put(url, null, 'delete');\n  }\n\n  static async post(url, payload) {\n    return this.put(url, payload, 'post');\n  }\n\n}","map":{"version":3,"sources":["/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/shared/services/CrudService.ts"],"names":["Axios","CrudService","get","url","config","data","create","payload","getResult","post","result","put","method","success","delete"],"mappings":"AAAA,OAAOA,KAAP,MAA0C,OAA1C;AAEA,OAAO,MAAMC,WAAN,CAAkB;AACP,eAAHC,GAAG,CAACC,GAAD,EAAcC,MAAd,EAA2C;AACzD,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACE,GAAN,CAAUC,GAAV,EAAeC,MAAf,CAAvB;AACA,WAAOC,IAAP;AACD;;AAEkB,eAANC,MAAM,CAACH,GAAD,EAAcI,OAAd,EAA4BC,SAA5B,EAAkD;AACnE,UAAM;AAAEH,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACS,IAAN,CAAWN,GAAX,EAAgBI,OAAhB,CAAvB;AACA,WAAOC,SAAS,GAAGA,SAAS,CAACH,IAAD,CAAZ,GAAqBA,IAAI,CAACK,MAA1C;AACD;;AAEe,eAAHC,GAAG,CAACR,GAAD,EAAcI,OAAd,EAA4BK,MAA5B,EAA0C;AACxD,UAAM;AAAEP,MAAAA;AAAF,QAAW,OAAOO,MAAM,GAAIZ,KAAD,CAAeY,MAAf,EAAuBT,GAAvB,EAA4BI,OAA5B,CAAH,GAA0CP,KAAK,CAACW,GAAN,CAAUR,GAAV,EAAeI,OAAf,CAAvD,CAAjB;AACA,WAAOF,IAAI,CAACQ,OAAZ;AACD;;AAEkB,eAANC,MAAM,CAACX,GAAD,EAAc;AAC/B,WAAO,KAAKQ,GAAL,CAASR,GAAT,EAAc,IAAd,EAAoB,QAApB,CAAP;AACD;;AAEgB,eAAJM,IAAI,CAACN,GAAD,EAAcI,OAAd,EAA4B;AAC3C,WAAO,KAAKI,GAAL,CAASR,GAAT,EAAcI,OAAd,EAAuB,MAAvB,CAAP;AACD;;AAtBsB","sourcesContent":["import Axios, { AxiosRequestConfig } from \"axios\";\n\nexport class CrudService {\n  static async get(url: string, config?: AxiosRequestConfig) {\n    const { data } = await Axios.get(url, config);\n    return data;\n  }\n\n  static async create(url: string, payload: any, getResult?: Function) {\n    const { data } = await Axios.post(url, payload);\n    return getResult ? getResult(data) : data.result;\n  }\n\n  static async put(url: string, payload: any, method?: any) {\n    const { data } = await (method ? (Axios as any)[method](url, payload) : Axios.put(url, payload));\n    return data.success;\n  }\n\n  static async delete(url: string) {\n    return this.put(url, null, 'delete');\n  }\n\n  static async post(url: string, payload: any) {\n    return this.put(url, payload, 'post');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}