{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/content/ContentList.tsx\",\n    _s = $RefreshSig$();\n\nimport { CheckCircleOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { useQuery } from \"../../shared/hooks/useQuery.hook\";\nimport { FormatUtils } from \"../../shared/utils/FormatUtils\";\nimport { StudyProcessService } from \"../study-process/StudyProcessService\";\nimport { ContentDetail } from \"./ContentDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ContentList(props) {\n  _s();\n\n  const {\n    contents,\n    courseId\n  } = props;\n  const fetchStudyProcesses = useCallback(() => {\n    return StudyProcessService.findByCourseId(courseId);\n  }, [courseId]);\n  const studyProcessResponse = useQuery(fetchStudyProcesses);\n  const studyProcessMap = useMemo(() => {\n    if (studyProcessResponse.data) {\n      return studyProcessResponse.data.reduce((map, sp) => {\n        map[sp.contentId] = sp;\n        return map;\n      }, {});\n    }\n\n    return {};\n  }, [studyProcessResponse.data]);\n  return /*#__PURE__*/_jsxDEV(Collapse, {\n    children: contents.sort((a, b) => a.order - b.order).map(content => {\n      const studyProcess = studyProcessMap[content.id];\n      const isDone = !!(studyProcess === null || studyProcess === void 0 ? void 0 : studyProcess.done);\n      const isBlock = !content.preview && !props.isEnrolled;\n      return /*#__PURE__*/_jsxDEV(Collapse.Panel, {\n        className: isDone ? \"bg-green-300\" : \"\",\n        collapsible: isBlock ? \"disabled\" : \"header\",\n        header: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"[\", FormatUtils.formatSeconds((studyProcess === null || studyProcess === void 0 ? void 0 : studyProcess.duration) || 0), \" /\", \" \", FormatUtils.formatSeconds(content.duration), \"]\", \" \", content.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this), isBlock && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-auto\",\n            children: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), isDone && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-auto\",\n            children: /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(ContentDetail, {\n          studyProcess: studyProcess,\n          courseId: props.courseId,\n          content: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, content.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContentList, \"BR37aCxm1JoEVRhk9GPCvZsJqZ8=\", false, function () {\n  return [useQuery];\n});\n\n_c = ContentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentList\");","map":{"version":3,"sources":["/Users/hieu/Documents/HCMUS_FIT/WEB_NC/webapp/src/modules/content/ContentList.tsx"],"names":["CheckCircleOutlined","LockOutlined","Collapse","React","useCallback","useMemo","useQuery","FormatUtils","StudyProcessService","ContentDetail","ContentList","props","contents","courseId","fetchStudyProcesses","findByCourseId","studyProcessResponse","studyProcessMap","data","reduce","map","sp","contentId","sort","a","b","order","content","studyProcess","id","isDone","done","isBlock","preview","isEnrolled","formatSeconds","duration","title"],"mappings":"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","sourcesContent":["import { CheckCircleOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { IContent } from \"../../shared/entities/IContent\";\nimport { IStudyProcess } from \"../../shared/entities/IStudyProcess\";\nimport { useQuery } from \"../../shared/hooks/useQuery.hook\";\nimport { FormatUtils } from \"../../shared/utils/FormatUtils\";\nimport { StudyProcessService } from \"../study-process/StudyProcessService\";\nimport { ContentDetail } from \"./ContentDetail\";\n\ninterface IContentListProps {\n  courseId: number;\n  contents: IContent[];\n  isEnrolled?: boolean;\n}\n\nexport function ContentList(props: IContentListProps) {\n  const { contents, courseId } = props;\n  const fetchStudyProcesses = useCallback(() => {\n    return StudyProcessService.findByCourseId(courseId);\n  }, [courseId]);\n\n  const studyProcessResponse = useQuery(fetchStudyProcesses);\n  const studyProcessMap = useMemo(() => {\n    if (studyProcessResponse.data) {\n      return studyProcessResponse.data.reduce((map: any, sp: IStudyProcess) => {\n        map[sp.contentId] = sp;\n        return map;\n      }, {});\n    }\n    return {};\n  }, [studyProcessResponse.data]);\n\n  return (\n    <Collapse>\n      {contents\n        .sort((a, b) => a.order - b.order)\n        .map((content) => {\n          const studyProcess = studyProcessMap[content.id];\n          const isDone = !!studyProcess?.done;\n          const isBlock = !content.preview && !props.isEnrolled;\n          return (\n            <Collapse.Panel\n              className={isDone ? \"bg-green-300\" : \"\"}\n              collapsible={isBlock ? \"disabled\" : \"header\"}\n              header={\n                <div className=\"flex items-center\">\n                  <div>\n                    [{FormatUtils.formatSeconds(studyProcess?.duration || 0)} /{\" \"}\n                    {FormatUtils.formatSeconds(content.duration)}]{\" \"}\n                    {content.title}\n                  </div>\n                  {isBlock && (\n                    <div className=\"ml-auto\">\n                      <LockOutlined />\n                    </div>\n                  )}\n                  {isDone && (\n                    <div className=\"ml-auto\">\n                      <CheckCircleOutlined />\n                    </div>\n                  )}\n                </div>\n              }\n              key={content.id}\n            >\n              <ContentDetail\n                studyProcess={studyProcess}\n                courseId={props.courseId}\n                content={content}\n              />\n            </Collapse.Panel>\n          );\n        })}\n    </Collapse>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}