{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/course/CourseEditForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Button, Checkbox, Divider, Form, Input, InputNumber, notification, Tooltip } from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { FileType } from \"../../shared/enums/FileType\";\nimport { CategorySelect } from \"../category/CategorySelect\";\nimport { Uploader } from \"../uploader/Uploader\";\nimport { ContentEditForm } from \"../content/ContentEditForm\";\nimport { CloseCircleFilled, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { FdmEditor } from \"../../shared/components/FdmEditor\";\nimport { CourseEditFormRules } from \"./CourseEditFormRules\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CourseService } from \"./CourseService\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { ASSETS_URL } from \"../../shared/constants/constants\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function CourseEditForm(props) {\n  _s();\n\n  const {\n    course: propsCourse\n  } = props;\n  const isUpdate = !!propsCourse;\n  const history = useHistory();\n  const [form] = useForm();\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [contents, setContents] = useState([]);\n  const addContent = useCallback(() => {\n    setContents([...contents, {\n      preview: false,\n      order: contents.length + 1,\n      key: uuidv4(),\n      formRef: {\n        current: null\n      }\n    }]);\n  }, [contents]);\n  useEffect(() => {\n    if (propsCourse && propsCourse.contents) {\n      setContents(propsCourse.contents.map(content => ({ ...content,\n        key: uuidv4(),\n        formRef: {\n          current: null\n        }\n      })));\n    }\n  }, [propsCourse]);\n  const avatarRef = useRef();\n  const coverRef = useRef();\n  const startProcess = useCallback(async () => {\n    try {\n      await form.validateFields();\n    } catch {\n      return notification.error({\n        message: \"Error\",\n        description: \"Please correct all error fields before submit\"\n      });\n    }\n\n    if (!avatarRef.current.getFile()) {\n      return notification.error({\n        message: \"Error\",\n        description: \"Course's avatar is empty\"\n      });\n    }\n\n    if (!coverRef.current.getFile()) {\n      return notification.error({\n        message: \"Error\",\n        description: \"Course's cover is empty\"\n      });\n    }\n\n    if (contents.length === 0) {\n      return notification.error({\n        message: \"Error\",\n        description: \"There must be at least 1 content\"\n      });\n    }\n\n    let isContentsValid = true;\n\n    for (const content of contents) {\n      const isContentValid = await content.formRef.current.validate();\n      isContentsValid = isContentsValid && isContentValid;\n    }\n\n    if (!isContentsValid) {\n      return notification.error({\n        message: \"Error\",\n        description: \"Please correct all error fields before submit\"\n      });\n    }\n\n    setSubmitLoading(true);\n    avatarRef.current.processFile();\n    coverRef.current.processFile();\n  }, [form, contents]);\n  const editorRef = useRef();\n  const createCourse = useCallback(async () => {\n    const course = await form.getFieldsValue();\n    course.contents = [];\n\n    for (const content of contents) {\n      course.contents.push(await content.formRef.current.getContent());\n    }\n\n    course.description = editorRef.current.getHtmlContent();\n    course.coverPath = uploadResultRef.current.coverPath;\n    course.avatarPath = uploadResultRef.current.avatarPath;\n\n    try {\n      let courseId;\n\n      if (isUpdate) {\n        course.id = propsCourse === null || propsCourse === void 0 ? void 0 : propsCourse.id;\n        courseId = course.id;\n        await CourseService.update(course);\n      } else {\n        courseId = await CourseService.add(course);\n      }\n\n      notification.success({\n        message: \"Success\",\n        description: \"Save course success!\"\n      });\n      history.push(`/courses/save-result/${courseId}`);\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n\n    setSubmitLoading(false);\n  }, [form, contents, isUpdate, history, propsCourse]);\n  const uploadResultRef = useRef({});\n  const onUpLoadSuccessHandler = useCallback(result => {\n    uploadResultRef.current[result.state] = result.filePath;\n\n    if (Object.keys(uploadResultRef.current).length === 2) {\n      createCourse();\n    }\n  }, [createCourse]);\n  const uploadedFiles = useMemo(() => {\n    if (!!propsCourse) {\n      return {\n        avatar: [{\n          source: `${ASSETS_URL}/${propsCourse.avatarPath}`,\n          options: {\n            type: \"local\"\n          }\n        }],\n        cover: [{\n          source: `${ASSETS_URL}/${propsCourse.coverPath}`,\n          options: {\n            type: \"local\"\n          }\n        }]\n      };\n    }\n\n    return {};\n  }, [propsCourse]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Course information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      initialValues: props.course,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 pr-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: [\"Category \", /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"text-red-400\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"categoryId\",\n            rules: CourseEditFormRules.categoryId,\n            children: /*#__PURE__*/_jsxDEV(CategorySelect, {\n              onlyChildren: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: [\"Title \", /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"text-red-400\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"title\",\n            rules: CourseEditFormRules.title,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Title...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2 pr-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: [\"Price ($) \", /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"text-red-400\",\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"price\",\n            rules: CourseEditFormRules.price,\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              className: \"w-fulli\",\n              min: 0,\n              max: 500,\n              placeholder: \"Price...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-2\",\n            children: \"Discount ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"discount\",\n            rules: CourseEditFormRules.discount,\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              className: \"w-fulli\",\n              min: 0,\n              max: 500,\n              placeholder: \"Discount...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: [\"Sub-description \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"text-red-400\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"subDescription\",\n        rules: CourseEditFormRules.subDescription,\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Sub-description...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"description\",\n        children: /*#__PURE__*/_jsxDEV(FdmEditor, {\n          html: propsCourse === null || propsCourse === void 0 ? void 0 : propsCourse.description,\n          editorRef: editorRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"complete\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: [\"Avatar \", /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"text-red-400\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Uploader, {\n        files: uploadedFiles.avatar,\n        fileType: FileType.IMAGE,\n        state: \"avatarPath\",\n        onUploadSuccess: onUpLoadSuccessHandler,\n        pondRef: avatarRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2\",\n        children: \"Cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Uploader, {\n        files: uploadedFiles.cover,\n        fileType: FileType.IMAGE,\n        state: \"coverPath\",\n        onUploadSuccess: onUpLoadSuccessHandler,\n        pondRef: coverRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl mt-8\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap\",\n      children: contents.map((content, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/2 pr-2 mb-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rounded-lg p-3 border relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute text-red-400 cursor-pointer\",\n            style: {\n              top: \".3rem\",\n              right: \".3rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Remove\",\n              children: /*#__PURE__*/_jsxDEV(CloseCircleFilled, {\n                className: \"text-xl\",\n                onClick: () => {\n                  contents.splice(idx, 1);\n                  setContents([...contents]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ContentEditForm, {\n            content: content,\n            formRef: content.formRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)\n      }, content.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      shape: \"round\",\n      onClick: addContent,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), \" Add content\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      loading: submitLoading,\n      danger: true,\n      type: \"primary\",\n      shape: \"round\",\n      className: \"w-full\",\n      onClick: startProcess,\n      children: \"Save course\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CourseEditForm, \"JjFXyozVBJIfx9ARH40aNOzaIzk=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = CourseEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseEditForm\");","map":{"version":3,"sources":["/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/course/CourseEditForm.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","Button","Checkbox","Divider","Form","Input","InputNumber","notification","Tooltip","useForm","FileType","CategorySelect","Uploader","ContentEditForm","CloseCircleFilled","PlusCircleOutlined","FdmEditor","CourseEditFormRules","v4","uuidv4","CourseService","NotificationUtils","ASSETS_URL","useHistory","CourseEditForm","props","course","propsCourse","isUpdate","history","form","submitLoading","setSubmitLoading","contents","setContents","addContent","preview","order","length","key","formRef","current","map","content","avatarRef","coverRef","startProcess","validateFields","error","message","description","getFile","isContentsValid","isContentValid","validate","processFile","editorRef","createCourse","getFieldsValue","push","getContent","getHtmlContent","coverPath","uploadResultRef","avatarPath","courseId","id","update","add","success","err","console","onUpLoadSuccessHandler","result","state","filePath","Object","keys","uploadedFiles","avatar","source","options","type","cover","categoryId","title","price","discount","subDescription","IMAGE","idx","top","right","splice"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Form,\n  Input,\n  InputNumber,\n  notification,\n  Tooltip,\n} from \"antd\";\nimport { useForm } from \"antd/lib/form/Form\";\nimport { ICourse } from \"../../shared/entities/ICourse\";\nimport { FileType } from \"../../shared/enums/FileType\";\nimport { CategorySelect } from \"../category/CategorySelect\";\nimport { Uploader } from \"../uploader/Uploader\";\nimport { IContent } from \"../../shared/entities/IContent\";\nimport { ContentEditForm } from \"../content/ContentEditForm\";\nimport { CloseCircleFilled, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { FdmEditor } from \"../../shared/components/FdmEditor\";\nimport { CourseEditFormRules } from \"./CourseEditFormRules\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { CourseService } from \"./CourseService\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { ASSETS_URL } from \"../../shared/constants/constants\";\nimport { useHistory } from \"react-router\";\n\ninterface ICourseEditFormProps {\n  course?: ICourse;\n}\n\nexport function CourseEditForm(props: ICourseEditFormProps) {\n  const { course: propsCourse } = props;\n  const isUpdate = !!propsCourse;\n  const history = useHistory();\n  const [form] = useForm();\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [contents, setContents] = useState<IContent[]>([]);\n  const addContent = useCallback(() => {\n    setContents([\n      ...contents,\n      {\n        preview: false,\n        order: contents.length + 1,\n        key: uuidv4(),\n        formRef: { current: null },\n      } as any,\n    ]);\n  }, [contents]);\n\n  useEffect(() => {\n    if (propsCourse && propsCourse.contents) {\n      setContents(propsCourse.contents.map(content => ({\n        ...content,\n        key: uuidv4(),\n        formRef: { current: null }\n      })));\n    }\n  }, [propsCourse]);\n\n  const avatarRef = useRef<any>();\n  const coverRef = useRef<any>();\n  const startProcess = useCallback(async () => {\n    try {\n      await form.validateFields();\n    } catch {\n      return notification.error({\n        message: \"Error\",\n        description: \"Please correct all error fields before submit\",\n      });\n    }\n\n    if (!avatarRef.current.getFile()) {\n      return notification.error({\n        message: \"Error\",\n        description: \"Course's avatar is empty\",\n      });\n    }\n\n    if (!coverRef.current.getFile()) {\n      return notification.error({\n        message: \"Error\",\n        description: \"Course's cover is empty\",\n      });\n    }\n\n    if (contents.length === 0) {\n      return notification.error({\n        message: \"Error\",\n        description: \"There must be at least 1 content\",\n      });\n    }\n\n    let isContentsValid = true;\n    for (const content of contents) {\n      const isContentValid = await (content as any).formRef.current.validate();\n      isContentsValid = isContentsValid && isContentValid;\n    }\n\n    if (!isContentsValid) {\n      return notification.error({\n        message: \"Error\",\n        description: \"Please correct all error fields before submit\",\n      });\n    }\n\n    setSubmitLoading(true);\n    avatarRef.current.processFile();\n    coverRef.current.processFile();\n  }, [form, contents]);\n\n  const editorRef = useRef<any>();\n  const createCourse = useCallback(async () => {\n    const course: ICourse = await form.getFieldsValue();\n    course.contents = [];\n    for (const content of contents) {\n      course.contents.push(await (content as any).formRef.current.getContent());\n    }\n    course.description = editorRef.current.getHtmlContent();\n    course.coverPath = uploadResultRef.current.coverPath;\n    course.avatarPath = uploadResultRef.current.avatarPath;\n    try {\n      let courseId;\n      if (isUpdate) {\n        course.id = propsCourse?.id as any;\n        courseId = course.id;\n        await CourseService.update(course);\n      } else {\n        courseId = await CourseService.add(course);\n      }\n      notification.success({\n        message: \"Success\",\n        description: \"Save course success!\"\n      });\n      history.push(`/courses/save-result/${courseId}`);\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n    setSubmitLoading(false);\n  }, [form, contents, isUpdate, history, propsCourse]);\n\n  const uploadResultRef = useRef<any>({});\n  const onUpLoadSuccessHandler = useCallback(\n    (result) => {\n      uploadResultRef.current[result.state] = result.filePath;\n      if (Object.keys(uploadResultRef.current).length === 2) {\n        createCourse();\n      }\n    },\n    [createCourse]\n  );\n\n  const uploadedFiles = useMemo(() => {\n    if (!!propsCourse) {\n      return {\n        avatar: [\n          {\n            source: `${ASSETS_URL}/${propsCourse.avatarPath}`,\n            options: { type: \"local\" }   \n          }\n        ],\n        cover: [\n          {\n            source: `${ASSETS_URL}/${propsCourse.coverPath}`,\n            options: { type: \"local\" }\n          }\n        ]\n      }\n    }\n    return {};\n  }, [propsCourse]);\n\n  return (\n    <>\n      <h1 className=\"text-xl\">\n        <b>Course information</b>\n      </h1>\n      <Divider />\n      <Form form={form} initialValues={props.course}>\n        <div className=\"flex\">\n          <div className=\"w-1/2 pr-2\">\n            <label className=\"block mb-2\">\n              Category <b className=\"text-red-400\">*</b>\n            </label>\n            <Form.Item name=\"categoryId\" rules={CourseEditFormRules.categoryId}>\n              <CategorySelect onlyChildren={true} />\n            </Form.Item>\n          </div>\n          <div className=\"w-1/2\">\n            <label className=\"block mb-2\">\n              Title <b className=\"text-red-400\">*</b>\n            </label>\n            <Form.Item name=\"title\" rules={CourseEditFormRules.title}>\n              <Input placeholder=\"Title...\" />\n            </Form.Item>\n          </div>\n        </div>\n        <div className=\"flex\">\n          <div className=\"w-1/2 pr-2\">\n            <label className=\"block mb-2\">\n              Price ($) <b className=\"text-red-400\">*</b>\n            </label>\n            <Form.Item name=\"price\" rules={CourseEditFormRules.price}>\n              <InputNumber\n                className=\"w-fulli\"\n                min={0}\n                max={500}\n                placeholder=\"Price...\"\n              />\n            </Form.Item>\n          </div>\n          <div className=\"w-1/2\">\n            <label className=\"block mb-2\">Discount ($)</label>\n            <Form.Item name=\"discount\" rules={CourseEditFormRules.discount}>\n              <InputNumber\n                className=\"w-fulli\"\n                min={0}\n                max={500}\n                placeholder=\"Discount...\"\n              />\n            </Form.Item>\n          </div>\n        </div>\n        <label className=\"block mb-2\">\n          Sub-description <b className=\"text-red-400\">*</b>\n        </label>\n        <Form.Item\n          name=\"subDescription\"\n          rules={CourseEditFormRules.subDescription}\n        >\n          <Input placeholder=\"Sub-description...\" />\n        </Form.Item>\n        <label className=\"block mb-2\">Description</label>\n        <Form.Item name=\"description\">\n          <FdmEditor html={propsCourse?.description} editorRef={editorRef} />\n        </Form.Item>\n        <Form.Item name=\"complete\" valuePropName=\"checked\">\n          <Checkbox>Complete</Checkbox>\n        </Form.Item>\n      </Form>\n      <div>\n        <label className=\"block mb-2\">\n          Avatar <b className=\"text-red-400\">*</b>\n        </label>\n        <Uploader\n          files={uploadedFiles.avatar}\n          fileType={FileType.IMAGE}\n          state=\"avatarPath\"\n          onUploadSuccess={onUpLoadSuccessHandler}\n          pondRef={avatarRef}\n        />\n      </div>\n\n      <div>\n        <label className=\"block mb-2\">Cover</label>\n        <Uploader\n          files={uploadedFiles.cover}\n          fileType={FileType.IMAGE}\n          state=\"coverPath\"\n          onUploadSuccess={onUpLoadSuccessHandler}\n          pondRef={coverRef}\n        />\n      </div>\n\n      <h1 className=\"text-xl mt-8\">\n        <b>Contents</b>\n      </h1>\n      <Divider />\n      <div className=\"flex flex-wrap\">\n        {contents.map((content, idx: number) => (\n          <div className=\"w-1/2 pr-2 mb-2\" key={(content as any).key}>\n            <div className=\"rounded-lg p-3 border relative\">\n              <div\n                className=\"absolute text-red-400 cursor-pointer\"\n                style={{ top: \".3rem\", right: \".3rem\" }}\n              >\n                <Tooltip title=\"Remove\">\n                  <CloseCircleFilled\n                    className=\"text-xl\"\n                    onClick={() => {\n                      contents.splice(idx, 1);\n                      setContents([...contents]);\n                    }}\n                  />\n                </Tooltip>\n              </div>\n              <ContentEditForm\n                content={content}\n                formRef={(content as any).formRef}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n      <Button type=\"primary\" shape=\"round\" onClick={addContent}>\n        <div className=\"flex items-center\">\n          <PlusCircleOutlined className=\"mr-2\" /> Add content\n        </div>\n      </Button>\n      <Divider />\n      <Button\n        loading={submitLoading}\n        danger\n        type=\"primary\"\n        shape=\"round\"\n        className=\"w-full\"\n        onClick={startProcess}\n      >\n        Save course\n      </Button>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}