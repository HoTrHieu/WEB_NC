{"ast":null,"code":"var _jsxFileName = \"/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/category/CategoryForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Form, Input, notification } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { CategoryFormRules } from \"./CategoryFormRules\";\nimport { CategorySelect } from \"./CategorySelect\";\nimport { CategoryService } from \"./CategoryService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CategoryForm(props) {\n  _s();\n\n  const {\n    category: propsCategory\n  } = props;\n  const [form] = Form.useForm();\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const submit = useCallback(async category => {\n    console.log(category);\n    setSubmitLoading(true);\n\n    try {\n      if (propsCategory) {\n        category.id = propsCategory.id;\n        await CategoryService.update(category);\n      } else {\n        await CategoryService.add(category);\n        form.resetFields();\n      }\n\n      notification.success({\n        message: \"Success\",\n        description: \"Save category success\"\n      });\n    } catch (err) {\n      console.error(err);\n      NotificationUtils.error(err.message);\n    }\n\n    setSubmitLoading(false);\n  }, [form, propsCategory]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    onFinish: submit,\n    initialValues: propsCategory,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: [\"Name \", /*#__PURE__*/_jsxDEV(\"b\", {\n        className: \"text-red-400\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      rules: CategoryFormRules.name({\n        checkName: !propsCategory\n      }),\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Name...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2\",\n      children: \"Parent category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"parentId\",\n      children: /*#__PURE__*/_jsxDEV(CategorySelect, {\n        onlyParent: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        shape: \"round\",\n        loading: submitLoading,\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CategoryForm, \"KC6iAIE52MzZWcAf2LSRs2mVGWQ=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = CategoryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryForm\");","map":{"version":3,"sources":["/Users/hieu/Documents/DoAnCuoiKi/src/WEB_NC/webapp/src/modules/category/CategoryForm.tsx"],"names":["Button","Form","Input","notification","React","useCallback","useState","NotificationUtils","CategoryFormRules","CategorySelect","CategoryService","CategoryForm","props","category","propsCategory","form","useForm","submitLoading","setSubmitLoading","submit","console","log","id","update","add","resetFields","success","message","description","err","error","name","checkName"],"mappings":"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","sourcesContent":["import { Button, Form, Input, notification } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { ICategory } from \"../../shared/entities/ICategory\";\nimport { NotificationUtils } from \"../../shared/utils/NotificationUtils\";\nimport { CategoryFormRules } from \"./CategoryFormRules\";\nimport { CategorySelect } from \"./CategorySelect\";\nimport { CategoryService } from \"./CategoryService\";\n\ninterface ICategoryFormProps {\n  category?: ICategory;\n}\n\nexport function CategoryForm(props: ICategoryFormProps) {\n  const { category: propsCategory } = props;\n  const [form] = Form.useForm();\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const submit = useCallback(\n    async (category: ICategory) => {\n      console.log(category);\n      setSubmitLoading(true);\n      try {\n        if (propsCategory) {\n          category.id = propsCategory.id;\n          await CategoryService.update(category);\n        } else {\n          await CategoryService.add(category);\n          form.resetFields();\n        }\n        notification.success({\n          message: \"Success\",\n          description: \"Save category success\",\n        });\n      } catch (err) {\n        console.error(err);\n        NotificationUtils.error(err.message);\n      }\n      setSubmitLoading(false);\n    },\n    [form, propsCategory]\n  );\n\n  return (\n    <Form form={form} onFinish={submit} initialValues={propsCategory}>\n      <label className=\"block mb-2\">\n        Name <b className=\"text-red-400\">*</b>\n      </label>\n      <Form.Item name=\"name\" rules={CategoryFormRules.name({ checkName: !propsCategory })}>\n        <Input placeholder=\"Name...\" />\n      </Form.Item>\n      <label className=\"block mb-2\">\n        Parent category\n      </label>\n      <Form.Item name=\"parentId\">\n        <CategorySelect onlyParent={true} />\n      </Form.Item>\n      <Form.Item>\n        <Button type=\"primary\" shape=\"round\" loading={submitLoading} htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}